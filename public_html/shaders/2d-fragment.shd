precision mediump float;
uniform sampler2D u_image;
//uniform vec2 u_sigmas;
//uniform vec3 u_data;
//uniform vec2 u_textureSize;
uniform float u_zmax;
varying vec2 v_texCoord;
vec4 colorScale(float d){
    //d=1.0-d;
    /*if(d<0.5){
        if(d<0.25){return vec4(0,4.0*d,1,1);}else{return vec4(0,1,2.0-d*4.0,1);}
    }else{
        if(d<0.75){return vec4(d*4.0-2.0,1,0,1);}else{return vec4(1,4.0-d*4.0,0,1);}
    }*/
    //d=d/255.0;
    float sigma=1000.0/255.0;
    float hei = 380.0/255.0;
    //return vec4(max(1.0-(0.9-d)*(0.9-d)*sigma,0.0),max(1.0-(0.5-d)*(0.5-d)*sigma,0.0),max(1.0-(0.1-d)*(0.1-d)*sigma,0.0),1);
    return vec4(
        min(max(hei-abs(d-0.23)*sigma,0.0),1.0),
        min(max(hei-abs(d-0.49)*sigma,0.0),1.0),
        min(max(hei-abs(d-0.77)*sigma,0.0),1.0),
        1
    );
}
float unpack(vec4 rgba){
    float d = rgba.a;
    d=256.0*d+rgba.b;
    d=256.0*d+rgba.g;
    d=256.0*d+rgba.r;
    //return u_zmax;
    return d;
}
void main() {
    //vec2 onePixel = vec2(1.0, 1.0) / u_textureSize;
    gl_FragColor = colorScale(unpack(texture2D(u_image,v_texCoord))/u_zmax);
    //gl_FragColor = texture2D(u_image,v_texCoord);
    //gl_FragColor = vec4(1.0,0.0,0.0,1.0);
}